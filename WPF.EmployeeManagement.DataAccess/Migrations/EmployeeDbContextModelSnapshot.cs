// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPF.EmployeeManagement.DataAccess;

namespace WPF.EmployeeManagement.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    partial class EmployeeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeMeeting", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("MeetingsMeetingID")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "MeetingsMeetingID");

                    b.HasIndex("MeetingsMeetingID");

                    b.ToTable("EmployeeMeeting");
                });

            modelBuilder.Entity("WPF.EmployeeManagement.Model.Model.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeetingID");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            MeetingID = 1,
                            EndDate = new DateTime(2021, 9, 14, 13, 29, 7, 199, DateTimeKind.Local).AddTicks(3190),
                            StartDate = new DateTime(2021, 9, 14, 13, 29, 7, 185, DateTimeKind.Local).AddTicks(9812),
                            Title = "Rum 1"
                        },
                        new
                        {
                            MeetingID = 2,
                            EndDate = new DateTime(2021, 9, 14, 13, 29, 7, 199, DateTimeKind.Local).AddTicks(4556),
                            StartDate = new DateTime(2021, 9, 14, 13, 29, 7, 199, DateTimeKind.Local).AddTicks(4527),
                            Title = "Rum 2"
                        });
                });

            modelBuilder.Entity("WPF.EmployeeManagement.UI.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phonenumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = 1,
                            Email = "johnny@gmail.com",
                            Firstname = "Rafael",
                            Lastname = "Milanes",
                            Phonenumber = 112
                        },
                        new
                        {
                            Id = 2,
                            Department = 1,
                            Email = "Juan@gmail.com",
                            Firstname = "Johnny",
                            Lastname = "Cage",
                            Phonenumber = 112
                        },
                        new
                        {
                            Id = 3,
                            Department = 2,
                            Email = "Anna@gmail.com",
                            Firstname = "Anna",
                            Lastname = "Lindgren",
                            Phonenumber = 112
                        },
                        new
                        {
                            Id = 4,
                            Department = 3,
                            Email = "John@gmail.com",
                            Firstname = "Juanete",
                            Lastname = "Pérez",
                            Phonenumber = 112
                        },
                        new
                        {
                            Id = 5,
                            Department = 3,
                            Email = "new@gmail.com",
                            Firstname = "New",
                            Lastname = "SuperNew",
                            Phonenumber = 112
                        });
                });

            modelBuilder.Entity("EmployeeMeeting", b =>
                {
                    b.HasOne("WPF.EmployeeManagement.UI.Model.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPF.EmployeeManagement.Model.Model.Meeting", null)
                        .WithMany()
                        .HasForeignKey("MeetingsMeetingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
